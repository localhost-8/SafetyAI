token = "–æ–∫, –∞ —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–µ–º 18 bit –∫–ª—é—á –≤—Ö–æ–¥–∞? "
while True:
    import os, time, sys, subprocess
    if len(sys.argv) == 2:
        time.sleep(5)
        print ('track end')
        if sys.platform == 'darwin':
            subprocess.Popen(['say', 'hello'])
    else:
        print ('main begin')
    #try:

        
    def add_to_startup(file_path=""):
        if file_path == "":
            file_path = os.path.dirname(os.path.realpath(__file__))
        bat_path = r'C:\Users\%s\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup' % USER_NAME
        with open(bat_path + '\\' + "open.bat", "w+") as bat_file:
            bat_file.write(r'start "" %s' % file_path)
    print ('[+] add to startup')
    print("[+] restarting libraries")
    
    #-------------
    #–ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
    import json
    import discord # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–∏—Å–∫–æ—Ä–¥–∞
    import requests 
    import datetime
    from bs4 import BeautifulSoup 
    import asyncio # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ.
    from discord.ext import commands, tasks # –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —Ñ—É–Ω–∫—Ü–∏—é commands, tasks
    #pip3 install discordpy-slash
    #pip install slash-discord.py
    #pip install -U slash-discord.py 
    from discord_slash import SlashCommand
    from discord_slash.utils.manage_commands import create_option
    from discord.utils import get # –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —Ñ—É–Ω–∫—Ü–∏—é get
    from discord.ext.commands import Bot
    from discord import FFmpegPCMAudio# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —Ñ—É–Ω–∫—Ü–∏—é Bot –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
    import ffmpeg
    import subprocess
    from subprocess import check_call
    import youtube_dl
    import random
    from colorama import init, Fore, Back, Style
    import requests
    import re
    import numpy as np
    from dhooks import Webhook
    from discord.gateway import DiscordWebSocket
    from rule34Py import rule34Py, version
    import winsound
    from bs4 import BeautifulSoup as bs
    
    
    #except:
        #print("[*] > Error in the library, please. restart the system !")
''' <---- Object Comment
    USE: Thonny/VScode/Pyton IDLE/Komodo/PyCharm
'''
    cmd  = os.system("cls")
    print("[*] trying to connect...") 
    print("[LOADING] Loading program...")
    print("""\033[1;32m
    ---------------------------------------------------------------------------------------
            ____  _ __                               __
           / __ )(_) /_  ____ _____  ____ __________/ /
          / __  / / __ \/ __ `/_  / / __ `/ ___/ __  /
         / /_/ / / / / / /_/ / / /_/ /_/ / /  / /_/ /
        /_____/_/_/ /_/\__,_/ /___/\__,_/_/   \__,_/

                                                  25.7V
                                                                Coded By ùñÜ‚úü·ñ¥·è¨·èí·èí·é© ùïØùñóùñöùñìùñêùñäùñó ‚úûÀûÀûŸ¥Ÿ¥B#0733
    --------------------------------------------------------------------------------------- 
    """)
    class MyDiscordWebSocket(DiscordWebSocket):
        print("  [-] plug-ins are enabled (0)") 

        async def send_as_json(self, data):
            if data.get('op') == self.IDENTIFY:
                if data.get('d', {}).get('properties', {}).get('$browser') is not None:
                    data['d']['properties']['$browser'] = 'Discord Android'
                    data['d']['properties']['$device'] = 'Discord Android'
            await super().send_as_json(data)


    DiscordWebSocket.from_client = MyDiscordWebSocket.from_client
    user_agents = [ 
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36', 
        'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36', 
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36', 
        'Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148', 
        'Mozilla/5.0 (Linux; Android 11; SM-G960U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Mobile Safari/537.36' 
    ]
    user_agent = random.choice(user_agents) 
    headers = {'User-Agent': user_agent}
    try:
        print("[+] start of systems")
        frequency = 1500  # Set Frequency To 2500 Hertz
        duration = 500  # Set Duration To 1000 ms == 1 second
        winsound.Beep(frequency, duration)
        #–ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
        #-------------
        #–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
        current_time = datetime.date.today()
        songs = asyncio.Queue()
        play_next_song = asyncio.Event()
        ydl = youtube_dl.YoutubeDL({'outtmpl': '%(id)s.%(ext)s'})
        print("player:" + str(ydl))
        intents = discord.Intents.default()
        intents.members = True
        intents.presences = True
        client = discord.Client()
        nd = datetime.datetime.now() #–ü–µ—Ä–µ–º–µ–Ω–∞—è –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∏—Ç—å—Å—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
        prefixintial = open("prefix.txt", "+a")
        prefixintial = open( "prefix.txt", "r").readline(1)
        import os
        import subprocess
        from subprocess import check_call
        print("\033[1;32m USER:" + os.name)
        print(f"\033[1;32m CONNECT: {current_time}")
        print(os.getpid())
        prefix = prefixintial # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω—É—é prefix –∏ –ø–∏—à–µ–º –ø–µ—Ä–µ–º–µ–Ω—É—é prefixinitial, –Ω—É–∂–Ω–æ –¥–ª—è –Ω–µ –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–º–∞–Ω–¥
        print("\033[1;32m command:" + str(prefix))
        client = commands.Bot( command_prefix= prefix)
        slash = SlashCommand(client, sync_commands=True) #–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –ø—Ä–µ—Ñ–∏–∫—Å–æ–º —Ç–æ–µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–æ–π prefixinitial
        print("\033[1;32m =============================")
        winsound.Beep(frequency, duration)
        frequency2 = 650  # Set Frequency To 2500 Hertz
        duration2 = 50  # Set Duration To 1000 ms == 1 second
        frequency3 = 2500  # Set Frequency To 2500 Hertz
        duration3 = 50  # Set Duration To 1000 ms == 1 second
    except:
        print("[***] > Error with settings, restart the system")
    #–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
    #-------------
    # –í—ã–¥–∞—á–∞ –ì–µ–Ω–¥–µ—Ä–Ω—ã—Ö —Ä–æ–ª–µ–π
    # –í—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π –ø—Ä–∏ –ø–æ–º–æ—â–∏ select menu
    try:
        @slash.slash(description="ai")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def browser(ctx, text:str):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            a = []
            b = []
            c = []
            d = []
            a1 = []
            b1 = []
            c1 = []
            d1 = []

            user_agents = [ 
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36', 
                'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36', 
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36', 
                'Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148', 
                'Mozilla/5.0 (Linux; Android 11; SM-G960U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Mobile Safari/537.36' 
            ]
            user_agent = random.choice(user_agents) 
            headers = {'User-Agent': user_agent}

            H = ["Rtsp://","rtsp://","www.","t.me",".pro",".net",".nes",".ru",".org","Hrrp://","hrrp://","Hrrps://","hrrps://","Http://","http://","Https://","https://"]
            f = False
            h = 0
            H1 = [f'https://www.google.ru/search?q={text}',f'https://www.bing.com/search?q={text}']
            for v in H:
                regex = re.compile(v)
                match = re.search(regex, text)
                if match:
                    H1 = re.findall(r'(https://[^\s]+)', text)
                    
            for H2 in H1:
                r = requests.get(str(H2), headers = headers)
                soup = bs(r.content, 'lxml')
                try:
                    a = str(soup.select_one('title').text)
                except:
                    b = str(soup.find_all('title'))
                    print("error!")
                try:
                    b = str(soup.select_one('body').text) 
                except:
                    b = str(soup.find_all('body'))
                    print("error!")
                try:
                    c = str(soup.select_one('h1').text) + ' \ add+ \ '
                except:
                    c = str(soup.find_all('h1')) + ' \ add+ \ '
                    print("error!")
                try:
                    c += str(soup.select_one('h3').text) + ' \ add+ \ '
                except:
                    c += str(soup.find_all('h3')) + ' \ add+ \ '
                    print("error!")
                try:
                   d = str(soup.select_one('span').text)
                except:
                    d = str(soup.find_all('span')) 
                    print("error!")
                try:
                   e = str(soup.select_one('div').text) 
                except:
                    e = str(soup.find_all('div')) 
                    print("error!")
                try:
                    a = str(a[0:120])
                except:
                    print("error!")
                try:
                    b = str(b[0:120])
                except:
                    print("error!")
                try:
                    c = str(c[0:120])
                except:
                    print("error!")
                try:
                    d = str(d[0:120])
                except:
                    print("error!")
                try:
                    e = str(e[0:120])
                except:
                    print("error!")
                    
                inf = discord.Embed(
                    color = setx,
                    title=f"[Title] {a}" ,
                    description= f"\n [Answer] {b} \n [Object] {c} \n [] {d} \n [Model] {e}",
                )
                send2 = await ctx.send(embed=inf)
                await asyncio.sleep(15)
                await send2.delete()
                
        @slash.slash(description="turn off the bot on the server")
        @commands.cooldown(1, 8, commands.BucketType.user)
        async def leave(ctx):
            fp = open("ID-admin.txt", "+a")
            with open("ID-admin.txt", "r") as file1:
                    # –∏—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º
                for line in file1:
                    print("ID:" + str(ctx.author.id) + " ID:" + str(line.strip()))                                                                                                                                                                        
                    if str(ctx.author.id) == str(line.strip()):
                        print(f"command: Channel Locked.")
                        embed3 = discord.Embed(title=f'[:clock2:]**Bihazard: **',
                                description= f'**The problems were broken:**\n blocked ID: **#{ctx.guild.id}** \n ADMIN: @{ctx.author.name} @{ctx.author.nick} \n ``connect = False`` \n**Reason:** Guild Save Used\n`Please Wait For An Admin/Moderator To Unlock This Channel`\n **Conclusion:** ``search in history.``.',
                                colour=0xff0000)
                        embed3.set_thumbnail(url="https://images.mysafetylabels.com/img/lg/L/biological-hazard-ansi-caution-label-lb-2249.png")
                        await ctx.send(embed=embed3)
                        await ctx.guild.leave()
                    else:
                            embed3 = discord.Embed(title=f'**Bihazard: **',
                                    description= f'``#you dont have the rights to send an attack``',
                                    colour=0xff0000)
                            embed3.set_thumbnail(url="https://images.mysafetylabels.com/img/lg/L/biological-hazard-ansi-caution-label-lb-2249.png")
                            await ctx.send(embed=embed3)       
        
        @slash.slash(description="role")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def remove(ctx, member:discord.Member, role: discord.Role):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ``member``!** {error_emoji}')
            else:
                if member is None:
                    await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ``role``!** {error_emoji}')
                else:
                    await member.remove_roles(role)
                    channel_id = 1038582736266461194
                    channel = client.get_channel(channel_id)
                    inf = discord.Embed(
                        color = setx,
                        title=f"{member} >>> get : {role}",
                        description= role,
                    )
                    await ctx.send(embed=inf)
                    await channel.send(embed=inf)
            
        @slash.slash(description="chat")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def DM(ctx, user_to_dm: discord.Member, arg): 
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if user_to_dm is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            else:
                await user_to_dm.create_dm()
                user = ctx.author.name
                embed3 = discord.Embed(title=f'user: {user} >>> send: { user_to_dm } ',
                                description=f'**loading...**',
                                colour=setx)
                embed3.set_image(url="https://media2.giphy.com/media/44y8gMkXosEm4qvRtF/giphy.gif?cid=790b7611ea3803295fbcd9407d7976ff88543e414e83d7d5&rid=giphy.gif&ct=g")
                embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
                embed3.set_thumbnail(url=ctx.guild.icon_url)
                embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                send1 = await ctx.send(embed=embed3)
                embed3 = discord.Embed(title=f'user: {user} >>> send: { user_to_dm } ',
                                description=f'{arg}',
                                colour=setx)
                embed3.set_image(url="https://media2.giphy.com/media/44y8gMkXosEm4qvRtF/giphy.gif?cid=790b7611ea3803295fbcd9407d7976ff88543e414e83d7d5&rid=giphy.gif&ct=g")
                embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
                embed3.set_thumbnail(url=ctx.guild.icon_url)
                embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                send2 = await user_to_dm.dm_channel.send(embed=embed3)
                await asyncio.sleep(3)
                await send1.delete()
                await asyncio.sleep(1800)
                await send2.delete()
                

        @slash.slash(description="settings")
        @commands.cooldown(1, 10, commands.BucketType.user)
        @commands.has_permissions(administrator = True)
        async def settings(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            user = ctx.author.name
            guild = ctx.guild
            embed3 = discord.Embed(title=f' ```settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏``` ',
                            description='** 5Ô∏è‚É£ - –≤–∫–ª—é—á–∏—Ç—å "–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏" (1)? \n 6Ô∏è‚É£ - –≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "—Ä–µ–∞–∫—Ü–∏–∏" (2)? \n 7Ô∏è‚É£ - –≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã" (3)? \n 8Ô∏è‚É£ -–≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "–ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞" (4)? \n *Ô∏è‚É£ - –æ—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (0)? **',
                            colour=setx)
            embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
            embed3.set_thumbnail(url=ctx.guild.icon_url)
            embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            message = await ctx.send(embed=embed3)
            await message.add_reaction('5Ô∏è‚É£')
            await message.add_reaction('6Ô∏è‚É£')
            await message.add_reaction('7Ô∏è‚É£')
            await message.add_reaction('8Ô∏è‚É£')
            await message.add_reaction('*Ô∏è‚É£')
            
            def check(reaction, user):
                return user == ctx.author
            
            reaction = None
            

            while True:
                if str(reaction) == '5Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : settings : additional features are included (1) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : settings : additional features are included (1) :‚úÖ")
 
                    print(f"user: {user} : settings : additional features are included (1) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(read_messages = True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (1).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (1).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break
                    
                elif str(reaction) == '6Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : settings : the reaction setting is enabled (2) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : settings : the reaction setting is enabled (2) :‚úÖ")
                        
                    print(f"user: {user} : settings : the reaction setting is enabled (2) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(connect = True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (2).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (2).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break

                if str(reaction) == '7Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : the ad blocking setting is enabled (3) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : the ad blocking setting is enabled (3) :‚úÖ")
                    print(f"user: {user} : settings : the ad blocking setting is enabled (3) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(read_message_history=True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (3).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (3).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break

                elif str(reaction) == '8Ô∏è‚É£':
                    try:
                        send1 = await user.send(f"user: {user} : settings : bad words setting is enabled (4) :‚úÖ")
                    except:
                        send1 = await ctx.send(f"user: {user} : settings : bad words setting is enabled (4) :‚úÖ")
                    print(f"user: {user} : settings : bad words setting is enabled (4)")
                    perms = discord.Permissions(send_messages = True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (4).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (4).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break

                if str(reaction) == '*Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : the selection has been restarted - cancel all settings (0) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : the selection has been restarted - cancel all settings (0) :‚úÖ")
                        
                    print(f"user: {user} : settings : the selection has been restarted - cancel all settings (0) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(connect=False,read_messages=False,read_message_history=False,send_messages=False)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (0).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "cancel all settings (0).",permissions = perms)
                    try: 
                        await user.channel.purge()
                    except:
                        print("channel()")
                    try: 
                        await user.delete_dm()
                    except:
                        print("del_dm()")
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break


                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 60.0, check = check)
                    
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                        
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                
                    try:
                        await send1.delete()
                    except:
                        print("[-] Error delete mess 1.")
                    try:
                        await send1.delete()
                    except:
                        print("[-] Error delete mess 1.")
                except:
                    pass


        @client.command()
        @commands.cooldown(1, 10, commands.BucketType.user)
        @commands.has_permissions(administrator = True)
        async def settings(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            user = ctx.author.name
            guild = ctx.guild
            embed3 = discord.Embed(title=f' ```settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏``` ',
                            description='** 5Ô∏è‚É£ - –≤–∫–ª—é—á–∏—Ç—å "–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏" (1)? \n 6Ô∏è‚É£ - –≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "—Ä–µ–∞–∫—Ü–∏–∏" (2)? \n 7Ô∏è‚É£ - –≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã" (3)? \n 8Ô∏è‚É£ -–≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "–ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞" (4)? \n *Ô∏è‚É£ - –æ—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (0)? **',
                            colour=setx)
            embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
            embed3.set_thumbnail(url=ctx.guild.icon_url)
            embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            message = await ctx.send(embed=embed3)
            await message.add_reaction('5Ô∏è‚É£')
            await message.add_reaction('6Ô∏è‚É£')
            await message.add_reaction('7Ô∏è‚É£')
            await message.add_reaction('8Ô∏è‚É£')
            await message.add_reaction('*Ô∏è‚É£')
            
            def check(reaction, user):
                return user == ctx.author
            
            reaction = None
            

            while True:
                if str(reaction) == '5Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : settings : additional features are included (1) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : settings : additional features are included (1) :‚úÖ")
 
                    print(f"user: {user} : settings : additional features are included (1) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(read_messages = True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (1).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (1).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break
                    
                elif str(reaction) == '6Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : settings : the reaction setting is enabled (2) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : settings : the reaction setting is enabled (2) :‚úÖ")
                        
                    print(f"user: {user} : settings : the reaction setting is enabled (2) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(connect = True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (2).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (2).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break

                if str(reaction) == '7Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : the ad blocking setting is enabled (3) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : the ad blocking setting is enabled (3) :‚úÖ")
                    print(f"user: {user} : settings : the ad blocking setting is enabled (3) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(read_message_history=True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (3).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (3).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break

                elif str(reaction) == '8Ô∏è‚É£':
                    try:
                        send1 = await user.send(f"user: {user} : settings : bad words setting is enabled (4) :‚úÖ")
                    except:
                        send1 = await ctx.send(f"user: {user} : settings : bad words setting is enabled (4) :‚úÖ")
                    print(f"user: {user} : settings : bad words setting is enabled (4)")
                    perms = discord.Permissions(send_messages = True)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (4).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "installed updates (4).",permissions = perms)
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break

                if str(reaction) == '*Ô∏è‚É£':
                    try:
                        send2 = await user.send(f"user: {user} : the selection has been restarted - cancel all settings (0) :‚úÖ")
                    except:
                        send2 = await ctx.send(f"user: {user} : the selection has been restarted - cancel all settings (0) :‚úÖ")
                        
                    print(f"user: {user} : settings : the selection has been restarted - cancel all settings (0) :‚úÖ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    perms = discord.Permissions(connect=False,read_messages=False,read_message_history=False,send_messages=False)
                    try:
                        role = discord.utils.get(ctx.guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                        await role.edit(reason = "installed updates (0).",permissions = perms)
                    except:
                        role = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                        await role.edit(reason = "cancel all settings (0).",permissions = perms)
                    try: 
                        await user.channel.purge()
                    except:
                        print("channel()")
                    try: 
                        await user.delete_dm()
                    except:
                        print("del_dm()")
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                    break


                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 60.0, check = check)
                    
                    try:
                        await message.remove_reaction(reaction, user)
                    except:
                        print("[-] Error delete reaction.")
                        
                    try:
                        await message.delete()
                    except:
                        print("[-] Error delete mess.")
                
                    try:
                        await send1.delete()
                    except:
                        print("[-] Error delete mess 1.")
                    try:
                        await send1.delete()
                    except:
                        print("[-] Error delete mess 1.")
                except:
                    pass


        @slash.slash(description="18+")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def QRULE34(ctx,text2:str ,text3:str):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if ctx.channel.is_nsfw():
                r34Py = rule34Py()
                search = r34Py.search([text2, text3])
                search3 = str(json.dumps(search[0], default=vars))
                embed = discord.Embed(
                    title="üü¢ Online:",
                    description= search3,
                    color=setx
                )
                embed.set_image(url="https://api-cdn.rule34.xxx/images/5708/c6891c23beb17b3805d646f335f26bbc.png")
            else:
                embed = discord.Embed(
                    title=":x: Channel Is Not NSFW",
                    color=setx
                )
                embed.set_image(url="https://media0.giphy.com/media/W5C9c8nqoaDJWh34i6/giphy.gif")

            message = await ctx.send(embed=embed)
            await message.add_reaction('üî∑')
            await message.add_reaction('üî∂')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üî∑':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : post 18+ :‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} :  post 18+ :‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} :  post 18+ :‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üî∂':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : post 18+ :‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  post 18+ :‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  post 18+ :‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break

            
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()


        @slash.slash(description="18+")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def RULE34(ctx,text:str):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if ctx.channel.is_nsfw():
                r34Py = rule34Py()
                result_comments = r34Py.get_comments(4153825)
                result_post = r34Py.get_post(4931536)
                result_pool = r34Py.get_pool(17509)
                result_random = r34Py.random_post([text]) # or r34Py.random_post()
                embed = discord.Embed(
                    title="IMG:",
                    color=setx
                )
                embed.set_image(url=result_random.image)
            else:
                embed = discord.Embed(
                    title=":x: Channel Is Not NSFW",
                    color=setx
                )
                embed.set_image(url="https://media0.giphy.com/media/W5C9c8nqoaDJWh34i6/giphy.gif")

            message = await ctx.send(embed=embed)
            await message.add_reaction('üî∑')
            await message.add_reaction('üî∂')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üî∑':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : post 18+ :‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} :  post 18+ :‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} :  post 18+ :‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üî∂':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : post 18+ :‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  post 18+ :‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  post 18+ :‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break

            
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()

        @slash.slash(description="18+")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def nsfw(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            import aiohttp
            if ctx.channel.is_nsfw():
                embed = discord.Embed(title="18+", colour= setx)  
                async with aiohttp.ClientSession() as cs:
                    async with cs.get('https://www.reddit.com/r/nsfw/new.json?sort=hot') as r:
                        res = await r.json()
                        embed.set_image(url=res['data']['children'] [random.randint(0, 25)]['data']['url'])
            else:
                embed = discord.Embed(
                    title=":x: Channel Is Not NSFW",
                    color=setx
                )
                embed.set_image(url="https://media0.giphy.com/media/W5C9c8nqoaDJWh34i6/giphy.gif")
            message = await ctx.send(embed=embed)
            await message.add_reaction('üî∑')
            await message.add_reaction('üî∂')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üî∑':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : post 18+ :‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} :  post 18+ :‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} :  post 18+ :‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üî∂':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : post 18+ :‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  post 18+ :‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  post 18+ :‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break

            
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()

        @client.command()
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def qlist(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            guild = ctx.guild
            servers = []
            for guild in client.guilds:
                try:
                    invite = await guild.text_channels[0].create_invite(max_age=3600)
                    servers.append(f"\n ** {guild.name} ** - \n [0] {invite.url} \n")
                except:
                    continue

                
            embed = discord.Embed(title='Servers', description='\n'.join(servers), color=setx)
            await ctx.send(embed=embed)

        @client.command(description='webhook management <partner +>')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def webhook(ctx,url:str=None,name:str=None,mess:str=None,text:str=None):
            if url == None:
                hook = await ctx.channel.create_webhook(name=f"{name}")
            else:
                try:
                    webhooklink = str(url)
                    hook = Webhook(webhooklink.replace("app", ""))
                except:
                    hook = await ctx.channel.create_webhook(name=f"{name}")
                    
                
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            embed3 = discord.Embed(title=f'HOST: {mess}',
                            description= text,
                            colour=setx)
            await hook.send(embed=embed3)
            await hook.delete()
        
        @slash.slash(description="post")
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def webhook(ctx,url:str=None,name:str=None,mess:str=None,text:str=None):
            if url == None:
                hook = await ctx.channel.create_webhook(name=f"{name}")
            else:
                try:
                    webhooklink = str(url)
                    hook = Webhook(webhooklink.replace("app", ""))
                except:
                    hook = await ctx.channel.create_webhook(name=f"{name}")
                    
                
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            await asyncio.sleep(3)
            embed3 = discord.Embed(title=f'HOST: {mess}',
                            description= text,
                            colour=setx)
            await hook.send(embed=embed3)
            await hook.delete()


        @client.command(description='webhook2 management <partner +>')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def webhook2(ctx,url:str=None,name:str=None,text:str=None):
            if url == None:
                hook = await ctx.channel.create_webhook(name=f"{name}")
            else:
                try:
                    webhooklink = str(url)
                    hook = Webhook(webhooklink.replace("app", ""))
                except:
                    hook = await ctx.channel.create_webhook(name=f"{name}")
                    
                
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            await hook.send(text)
            await hook.delete()

        @slash.slash(description="messange")
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def webhook2(ctx,url:str=None,name:str=None,text:str=None):
            if url == None:
                hook = await ctx.channel.create_webhook(name=f"{name}")
            else:
                try:
                    webhooklink = str(url)
                    hook = Webhook(webhooklink.replace("app", ""))
                except:
                    hook = await ctx.channel.create_webhook(name=f"{name}")
                    
                
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            await hook.send(text)
            await hook.delete()
                
        @slash.slash(description="Channel Locked..")
        @commands.has_permissions(administrator = True)
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def lockdown(ctx, member:discord.Member):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            avtorMsg = ctx.author.name
            channel_id = ctx.channel.id
            channel = client.get_channel(channel_id)
            overwrite = discord.PermissionOverwrite()
            overwrite.send_messages = False
            overwrite.read_messages = False
            overwrite.connect = False
            overwrite.read_message_history= False
            await channel.set_permissions(member, overwrite=overwrite)
            embed3 = discord.Embed(title=f'HOST: {channel}',
                            description= f'**Channel Locked.**\n USER: {member} \n Profile2: {avtorMsg} \n ``read_message_history = False`` \n ``send_messages = False`` \n ``read_messages = False`` \n ``connect = False`` \n cod: ``{overwrite}`` \n**Reason:** Guild Save Used\n`Please Wait For An Admin/Moderator To Unlock This Channel`',
                            colour=setx)
            embed3.set_thumbnail(url=ctx.guild.icon_url)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            await channel.set_permissions(member, overwrite=overwrite)
            await ctx.send(embed=embed3)


        @slash.slash(description="Channel opened..")
        @commands.has_permissions(administrator = True)
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def Unlock(ctx, member:discord.Member):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            avtorMsg = ctx.author.name
            channel_id = ctx.channel.id
            channel = client.get_channel(channel_id)
            overwrite = discord.PermissionOverwrite()
            overwrite.send_messages = True
            overwrite.read_messages = True
            overwrite.read_message_history= True
            overwrite.connect = True
            await channel.set_permissions(member, overwrite=overwrite)
            embed3 = discord.Embed(title=f'HOST: {channel}',
                            description= f'**The channel is open.**\n USER: {member} \n Profile2: {avtorMsg} \n ``read_message_history = True`` \n ``send_messages = True`` \n ``read_messages = True`` \n ``connect = True`` \n cod: ``{overwrite}`` \n **Reason:** Guild Save Used \n `Please write a report to the user later`',
                            colour=setx)
            embed3.set_thumbnail(url="https://thumbs.gfycat.com/TanFailingCoypu-size_restricted.gif")
            embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.channel.send(embed=embed3)

            
        @slash.slash(description="type side of square: ")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def square(ctx, side:int ):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            square = side+side+side+side
            perimeter = side**2
            diagonal = np.sqrt(side**2+side**2)
            emb = discord.Embed(title='–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∫–≤–∞–¥—Ä–∞—Ç–µ:',color=setx)
            emb.add_field(name="[+]perimeter:",value=square,inline=False)
            emb.add_field(name="[+]square:",value=perimeter,inline=False)
            emb.add_field(name='[+]diagonal:',value=diagonal,inline=False)
            emb.set_thumbnail(url='https://i.gifer.com/8Od7.gif')
            message = await ctx.send(embed = emb)
            await message.add_reaction('‚ô•')
            await message.add_reaction('üíî')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == '‚ô•':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : square:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : square:‚úÖ >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : square:‚úÖ >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üíî':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : square:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : square:‚ùå >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : square:‚ùå >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
                
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="this software is made to calculate circles (write the radius of the circle:)")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def circle(ctx, r:int):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            from art import tprint
            import math, os
            i = 0
            P = 3.14
            tprint('L=r*p*r')
            L = (P*2*float(r))
            S = (float(r)**2*P)
            emb = discord.Embed(title='–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∫—Ä—É–≥:',color=setx)
            emb.add_field(name="[+]L:",value=L,inline=False)
            emb.add_field(name="[+]S:",value=S,inline=False)
            emb.set_thumbnail(url='https://i.pinimg.com/originals/b8/13/78/b81378741b6aa6cb222f1404aafa126f.gif')
            message = await ctx.send(embed = emb)
            await message.add_reaction('üçÉ')
            await message.add_reaction('üçí')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üçÉ':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : circle:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : circle:‚úÖ >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : circle:‚úÖ >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üçí':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : circle:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : circle:‚ùå >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : circle:‚ùå >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="- USER")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def qinfo(ctx,member:discord.Member):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0       
            emb = discord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',color=setx)
            emb.add_field(name="–ö–æ–≥–¥–∞ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è:",value=member.joined_at,inline=False)
            emb.add_field(name="–ò–º—è:",value=member.display_name,inline=False)
            t = member.status
            if t == discord.Status.online:
                d = "‚úÖ –í —Å–µ—Ç–∏"

            t = member.status
            if t == discord.Status.offline:
                d = "üîá –ù–µ –≤ —Å–µ—Ç–∏"

            t = member.status
            if t == discord.Status.idle:
                d = "üí´ –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"

            t = member.status
            if t == discord.Status.dnd:
                d = "üïê –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"
            emb.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=d,inline=False)
            emb.add_field(name="–°—Ç–∞—Ç—É—Å:", value=member.activity,inline=False)
            emb.add_field(name="–†–æ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", value=str(member.top_role.mention),inline=False)
            emb.add_field(name='–ê–π–¥–∏',value=member.id,inline=False)
            emb.add_field(name="–ê–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω:",value=member.created_at.strftime("%a,%#d %B %Y, %I:%M %p UTC"),inline=False)
            emb.set_thumbnail(url=member.avatar_url)
            message = await ctx.send(embed = emb)
            await message.add_reaction('üç∏')
            await message.add_reaction('üç∑')
            def check(reaction, user):
                return user == ctx.author

            reaction = None

            while True:
                if str(reaction) == 'üç∏':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : qinfo:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : qinfo:‚úÖ >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : qinfo:‚úÖ >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt               
                elif str(reaction) == 'üç∑':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : qinfo:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : qinfo:‚ùå >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : qinfo:‚ùå >> {i} üìà" )# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                    
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
            file1.close()
        @slash.slash(description="- list")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def qlvlup(ctx):
            message = await ctx.send(file=discord.File('Up_lvl.txt'))
            await asyncio.sleep(30)
            await ctx.channel.purge(2)
            
        @slash.slash(description="- list")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def qinvite(ctx):
            i = 0
            message = await ctx.send(file=discord.File('Invite.txt'))
            await message.add_reaction('üè≥')
            await message.add_reaction('üè¥')
            def check(reaction, user):
                return user == ctx.author

            reaction = None

            while True:
                if str(reaction) == 'üè≥':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : desk (invite):‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : desk (invite):‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : desk (invite):‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üè¥':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : desk (invite):‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : desk (invite):‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : desk (invite):‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="history")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def history(ctx):
            i = 0
            message = await ctx.send(file=discord.File('Massage.txt'))
            await message.add_reaction('üåï')
            await message.add_reaction('üåë')
            def check(reaction, user):
                return user == ctx.author

            reaction = None

            while True:
                if str(reaction) == 'üåï':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : history:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : history:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : history:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üåë':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : history:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : history:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : history:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()        
        @slash.slash(description='customkey')
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def customkey(ctx, key, number, length, url = None):
            i = 0
            chars = str(key)
            number = int(number)
            length = int(length)
            for n in range(number):
                password =''
                for i in range(length):
                    password += random.choice(chars)
                with open("keygetp.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8
                    if url == None:
                        logmsg.write(password + "\n") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt        message = await ctx.send(file=discord.File('Massage.txt'))
                    else:
                        logmsg.write(url + password + "\n")
            message = await ctx.send(file=discord.File('keygetp.txt'))
            await message.add_reaction('üî•')
            await message.add_reaction('‚ùÑ')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üî•':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : customkey:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : customkey:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : customkey:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == '‚ùÑ':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : customkey:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : customkey:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : customkey:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await asyncio.sleep(25)
            os.remove("keygetp.txt")
            await message.delete()
        @slash.slash(description="bad_word2")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def bad_word(ctx):
            i = 0
            message = await ctx.send(file=discord.File('Bad word2.txt'))
            await message.add_reaction('üèî')
            await message.add_reaction('üóª')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üèî':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : bad_word:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : bad_word:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : bad_word:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üóª':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : bad_word:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : bad_word:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : bad_word:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="turn off the bot on the server")
        async def alert(ctx,ids):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            fp = open("ID-admin.txt", "+a")
            with open("ID-admin.txt", "r") as file1:
                    # –∏—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º
                for line in file1:
                    print("ID:" + str(ctx.author.id) + " ID:" + str(line.strip()))                                                                                                                                                                        
                    if str(ctx.author.id) == str(line.strip()):
                        if ids is None:
                            await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ id_server``!** {error_emoji}')
                        else:
                            with open("ID-server.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                                logmsg.write(str(ids) + f"\n")
                            channel_id = 1046478086188826725
                            channel = client.get_channel(channel_id)
                            print(f"command: Channel Locked.")
                            embed3 = discord.Embed(title=f'**Bihazard: **',
                                    description= f'**The problems were broken:**\n blocked ID: #{ids} \n ADMIN: @{ctx.author.name} @{ctx.author.nick} \n Profile: ``@{user}`` \n ``BAN = True`` \n ``closing chats = True`` \n ``connect = False`` \n**Reason:** Guild Save Used\n`Please Wait For An Admin/Moderator To Unlock This Channel`\n **Conclusion:** ``search in history.``.',
                                    colour=setx)
                            embed3.set_thumbnail(url="https://images.mysafetylabels.com/img/lg/L/biological-hazard-ansi-caution-label-lb-2249.png")
                            await channel.send(embed=embed3)
                            await ctx.send(embed=embed3)
                    else:
                            embed3 = discord.Embed(title=f'**Bihazard: **',
                                    description= f'``#you dont have the rights to send an attack``',
                                    colour=setx)
                            embed3.set_thumbnail(url="https://images.mysafetylabels.com/img/lg/L/biological-hazard-ansi-caution-label-lb-2249.png")
                            await ctx.send(embed=embed3)
            
        @slash.slash(description="json")
        async def img(ctx,url):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            emb = discord.Embed(title = "Picture -> \n –∫–∞—Ä—Ç–∏–Ω–∫–∞:", colour=setx)
            emb.set_image(url = url)
            message = await ctx.send(embed = emb) 
            await message.add_reaction('‚úî')
            await message.add_reaction('‚≠ï')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == '‚úî':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : img:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : img:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : img:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == '‚≠ï':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : img:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : img:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : img:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="json2")          
        async def img2(ctx,url):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            response = requests.get(url) # Get-–∑–∞–ø—Ä–æ—Å
            json_data = json.loads(response.text) # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON
            embed = discord.Embed(color = setx, title = 'Picture -> \n –∫–∞—Ä—Ç–∏–Ω–∫–∞:') # –°–æ–∑–¥–∞–Ω–∏–µ Embed'a
            embed.set_image(url = json_data['link']) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É Embed'a
            message = await ctx.send(embed = embed) 
            await message.add_reaction('üü©')
            await message.add_reaction('üü•')        
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üü©':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : img2:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : img2:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : img2:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üü•':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : img2:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : img2:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : img2:‚ùå  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break


            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="search +h +m +l +i +p")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def search(ctx,word:str,status:str):
            if status == "h":
                file1 = open( "Massage.txt", "r")
            if status == "m":
                file1 = open( "Bad word2.txt", "r")
            if status == "l":
                file1 = open( "Invite.txt", "r")
            if status == "i":
                file1 = open( "Up_lvl.txt", "r")
            if status == "p":
                file1 = open( "prefix.txt", "r")
            i = 0
            txt = file1.readlines()
            print(txt)
            string = word
            for text in txt:
                regex = re.compile(string)
                match = re.search(regex, text)
                if match:
                    with open("file.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(' Found "{}" in "{}"'.format(string, text)) # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        text_pos = match.span()
                        logmsg.write(text[match.start():match.end()]) # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
            message = await ctx.send(file=discord.File('file.txt'))
            await message.add_reaction('‚ûï')
            await message.add_reaction('‚ûñ')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == '‚ûï':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : search:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : search:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : search:‚úÖ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == '‚ûñ':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : search:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : search:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : search:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await asyncio.sleep(90)
            await message.delete()
            await asyncio.sleep(90)
            os.remove("file.txt")
            file1.close()
        @slash.slash(description="qhelp")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def qhelp(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            embed = discord.Embed(color=setx, title=f'Commands:', description= "``/square `` - write the properties of a square -> \n –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞ \n ``/circle `` - write circle properties -> \n –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫—Ä—É–≥–∞ \n ``/cl_lvlup `` - clear the level -> \n –æ—á–∏—Å—Ç–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å \n ``/cl_bad_word2`` - clear the blacklist -> \n –æ—á–∏—Å—Ç–∏—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ \n ``/cl_history `` - clear history -> \n –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é \n ``/cl_index`` - clear the index -> \n –æ—á–∏—Å—Ç–∏—Ç—å –∏–Ω–¥–µ–∫—Å \n  ``/qrule34 `` - content for 18+ -> \n –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è 18+ \n  ``/rule34 `` - content for 18+ -> \n –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è 18+ \n ``/nsfw `` - content for 18+ -> \n –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è 18+ \n ``/webhook /webhook2  `` - webhook management -> \n —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ–±-–ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞–º–∏ \n ``/changestatus  `` - change the status of the bot -> \n –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ \n  ``/qlvlup  `` - viewing the level of posts. -> \n –ø—Ä–æ—Å–º–æ—Ç—Ä —É—Ä–æ–≤–Ω—è –ø–æ—Å—Ç–æ–≤. \n  ``/qinvite `` - a sheet for checking invites. -> \n –ª–∏—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π. \n  ``/search`` - search in history. -> \n –ø–æ–∏—Å–∫ –≤ –∏—Å—Ç–æ—Ä–∏–∏ \n ``/avatar`` - Shows you a users profile picture. -> \n –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n ``/qhelp`` - Shows you a help embed. -> \n –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–ø—Ä–∞–≤–∫—É \n``/post`` - publish a post -> \n –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç \n``üìù /info`` - Shows useful server information.  -> \n –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ. \n``/invite`` - Shows you a list of server invitations  -> \n –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä \n``/qinfo`` - Shows you useful information about a user  -> \n –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. \n``/write_prefix`` - new prefix for staff command.  -> \n –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —à—Ç–∞–±–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã. \n``/dm /tpsend`` - for a personal chat.  -> \n–¥–ª—è –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞. \n``/qnick`` - quickly change the nickname on the server.  -> \n –±—ã—Å—Ç—Ä–æ —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. \n``/report`` - Shows you useful information about a user.  -> \n –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. \n``/clear`` - clear the entire chat in 5-10 seconds.  -> \n —Å—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —á–∞—Ç –∑–∞ 5-10 —Å–µ–∫—É–Ω–¥. \n``/qchannel`` - create a new chat.  -> \n —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç. \n``/ban`` - Bans a member.  -> \n —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç. \n``/clears`` - Clears the community from the user.  -> \n —Å—á–∏—â–∞–µ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. \n``/lockdown`` - Kicks a member.  -> \n –∑–∞–∫—Ä—ã—Ç—å —á–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n``/unlock`` - Unbans a member.  -> \n –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n``/qchdel`` - isolation channel. -> \n —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª. \n ``/remove`` - remove a role from a user. ->\n —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. \n ``/browser`` - search for information on a subject.  -> \n –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ. \n")
            embed.add_field(name='Add to your server -> \n –î–æ–±–∞–≤–∏—Ç—å –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä', value='[‚å®](https://discord.com/api/oauth2/authorize?client_id=1020080505384873984&permissions=8&scope=bot%20applications.commands)', inline=False)
            embed.add_field(name='Official bot server -> \n –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç-—Å–µ—Ä–≤–µ—Ä:', value='[üéõ](https://discord.gg/5zRq8kux96)', inline=False)
            embed.add_field(name=' Developer Terms of Service -> \n –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:', value='[üîç](https://discord.com/developers/docs/policies-and-agreements/developer-terms-of-service)', inline=False)
            embed.add_field(name=' Discord Developer Policy -> \n –ü–æ–ª–∏—Ç–∏–∫–∞ Discord –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:', value='[üìã](https://discord.com/developers/docs/policies-and-agreements/developer-policy)', inline=False)
            embed.add_field(name=' Learn more about bot users -> \n –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö-–±–æ—Ç–∞—Ö:', value='[üì¶](https://discord.com/developers/docs/topics/oauth2#bots)', inline=False)
            embed.add_field(name='  ùô¢ùôÆ ùôòùôßùôöùôñùô©ùô§ùôß ', value='[üíé](https://discord-tracker.ru/tracker/user/931586817713668177/)', inline=False)
            ping_ = client.latency
            ping = round(ping_ * 1000)
            
            i = 0
            n = 0
                
            embed.add_field(name=f"my ping - –º–æ–π –ø–∏–Ω–≥:", value=f'[{ping}ms üïê](https://yandex.ru/time?ysclid=l9rqar6ovg84234744)', inline=False)

            embed.set_thumbnail(url="https://cdn.dribbble.com/users/68238/screenshots/5788547/banksy.gif")
            message = await ctx.send(embed=embed)
            await message.add_reaction('üü¢')
            await message.add_reaction('üî¥')
            def check(reaction, user):
                return user == ctx.author

            reaction = None

            while True:
                if str(reaction) == 'üü¢':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : help:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : help:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : help:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üî¥':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : help:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : help:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : help:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break


            
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
        @slash.slash(description="cat")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def cat(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            response = requests.get('https://some-random-api.ml/img/cat') # Get-–∑–∞–ø—Ä–æ—Å
            json_data = json.loads(response.text) # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON
            embed = discord.Embed(color = setx, title = 'Cat: -> \n –ö–æ—Ç:') # –°–æ–∑–¥–∞–Ω–∏–µ Embed'a
            embed.set_image(url = json_data['link']) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É Embed'a
            message = await ctx.send(embed = embed) 
            await message.add_reaction('üîÜ')
            await message.add_reaction('üîÖ')
            def check(reaction, user):
                return user == ctx.author

            reaction = None

            while True:
                if str(reaction) == 'üîÜ':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : cat:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : cat:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : cat:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üîÖ':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : cat:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  cat:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  cat:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break



            
            await asyncio.sleep(1800)
            await send1.delete()
            await send2.delete()
            await message.delete()
        @slash.slash(description="dog")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def dog(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            response = requests.get('https://some-random-api.ml/img/dog') # Get-–∑–∞–ø—Ä–æ—Å
            json_data = json.loads(response.text) # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON
            embed = discord.Embed(color = setx, title = 'Dog: -> \n –°–æ–±–∞–∫–∞:') # –°–æ–∑–¥–∞–Ω–∏–µ Embed'a
            embed.set_image(url = json_data['link']) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É Embed'a
            message = await ctx.send(embed = embed)
            await message.add_reaction('‚ñ´')
            await message.add_reaction('üéà')
            
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == '‚ñ´':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : dog:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} :  dog:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} :  dog:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üéà':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : dog:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  dog:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  dog:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break


            await asyncio.sleep(1800)
            await send1.delete()
            await send2.delete()
            await message.delete()
        @slash.slash(description="fox")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def fox(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            response = requests.get('https://some-random-api.ml/img/fox') # Get-–∑–∞–ø—Ä–æ—Å
            json_data = json.loads(response.text) # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON
            embed = discord.Embed(color = setx, title = 'Fox: -> \n –õ–∏—Å:') # –°–æ–∑–¥–∞–Ω–∏–µ Embed'a
            embed.set_image(url = json_data['link']) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É Embed'a
            message = await ctx.send(embed = embed)
            await message.add_reaction('üíπ')
            await message.add_reaction('„ÄΩ')
            
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üíπ':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : fox:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : fox:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : fox:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == '„ÄΩ':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : fox:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  fox:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  fox:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break


            
            await asyncio.sleep(1800)
            await send1.delete()
            await send2.delete()
            await message.delete()
        @slash.slash(description="nick")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def qnick(ctx, member: discord.Member, nick):
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            else:
                await member.edit(nick=nick)
                await ctx.send(f'nickname was changed for {member.mention} -> \n –ø—Å–µ–≤–¥–æ–Ω–∏–º –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –¥–ª—è {member.mention}')
        @client.event
        async def on_message(payload):
            winsound.Beep(frequency2, duration2)
            if payload.user_id != None:
                channel = client.get_channel(payload.channel_id)
                if channel is None: # checking if we are in a DM channel
                    channel = discord.utils.get(client.private_channels, id=payload.channel_id)
                    

        @client.event
        async def on_raw_reaction_add(payload):
            try:
                emoji = payload.emoji # —Ä–µ–∞–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                print("emoji_name:", str(emoji))
            except:
                print("emoji_name: [fail1]")
            #await asyncio.sleep(280)
            #try:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
            guild = client.get_guild(payload.guild_id)
            message_id = payload.message_id # ID —Å–æ–æ–±—â–µ–Ω–∏—è
            channel_id = payload.channel_id # ID –∫–∞–Ω–∞–ª–∞
            channel = client.get_channel(channel_id) # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª
            message = await channel.fetch_message(message_id) # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            user = message.author
            try:
                emoji = await payload.fetch_message(payload.emoji)
                print("emoji_name:", str(emoji))
            except:
                print("emoji_name: [fail2]")
                
                
            try:
                role = discord.utils.get(message.guild.roles, name = "plugin")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
            except:
                print("return ...")
            perms = discord.Permissions(read_messages = True)
            try:
                nk = role.permissions
            except:
                nk = None
            print(nk," + ",perms)
            try:
                if nk == perms:
                    print("True +")
                    return()
                else:
                    print("False -")

                    try:
                        add_role = [role for role in channel.changed_roles if role.name == emoji]
                        await user.add_roles(add_role[0])
                    except:
                        print("role: [fail 1]")
                    try:
                        add_role = [role for role in channel.changed_roles if role.name == emoji]
                        await client.add_roles(user, add_role[0])
                    except:
                        print("role: [fail 2]")
                    try:
                        role = discord.utils.get(user.server.roles, name == emoji)
                        await user.add_roles(role)
                    except:
                        print("role: [fail 3]")
                    try:
                        role_1 = user.guild.get_role(emoji)
                        await user.add_roles(role_1)
                    except:
                        print("role: [fail 4]")
                        
                    try:
                        role = discord.utils.get(user.server.roles, name == emoji)
                        await client.add_roles(user,role)
                    except:
                        print("role: [fail 5]")
                    try:
                        role_1 = user.guild.get_role(emoji)
                        await client.add_roles(user,role_1)
                    except:
                        print("role: [fail 6]")
                        
                    try:
                        emoji = await channel.fetch_message(payload.emoji)
                        print("emoji:", str(emoji))
                    except:
                        print("emoji: [fail 2]")
                        
                    try:
                        emoji = await message.fetch_message(payload.emoji)
                        print("emoji:", str(emoji))
                    except:
                        print("emoji: [fail 3]")
                        
                    try:
                        emoji = await payload.fetch_message(payload.emoji)
                        print("emoji:", str(emoji))
                    except:
                        print("emoji: [fail 4]")
                    
                    try:
                        await message.add_reaction(str(emoji))
                        print("add reaction ", str(emoji))
                    except:
                        print("add reaction [fail1]")

                    try:
                        await payload.add_reaction(str(emoji))
                        print("add reaction ", str(emoji))
                    except:
                        print("add reaction [fail2]")
                        
                    try:
                        emoji = await channel.add_reaction(str(emoji))
                        print("add reaction", str(emoji))
                    except:
                        print("add reaction [fail3]")
            except:
                print("Error - + ")

        @client.event
        async def on_message(message):
            winsound.Beep(frequency2, duration2)
            if message.author == client.user:
                return
            if message.content.startswith("register"):
                if isinstance(message.channel, discord.DMChannel):
                  await message.author.send("registration mode coming soon!")
                
            if message.content.startswith("$ok"):
                on_member_join()

                
        @slash.slash(description="channel delete?")
        @commands.has_permissions(administrator = True)
        @commands.cooldown(1, 15, commands.BucketType.user)
        async def qchdel(message,seconds:int):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            channel_id = message.channel.id
            avtorMsg = message.author.name
            channel = client.get_channel(channel_id)
            inf2 = discord.Embed(
                color = setx,
                title=f"CHANNEL DELET >> Time: {seconds} -> \n –ö–ê–ù–ê–õ –£–î–ê–õ–ò–¢–¨ >> –í—Ä–µ–º—è: {seconds} ",
                description= channel_id,
            )
            inf2.set_image(url="https://media2.giphy.com/media/44y8gMkXosEm4qvRtF/giphy.gif?cid=790b7611ea3803295fbcd9407d7976ff88543e414e83d7d5&rid=giphy.gif&ct=g")
            await channel.send(embed=inf2)
            await asyncio.sleep(int(seconds))
            await channel.delete(reason=" {avtorMsg}: delet channel :{channel_id}")
            channel_id = 1038582736266461194
            channel = client.get_channel(channel_id)
            inf = discord.Embed(
                color = setx,
                title=f"{avtorMsg} >> delet channel",
                description= channel_id,
            )
            await channel.send(embed=inf)
            
    # -------------------------------------------------------------------------------------------------------    

        @slash.slash(name='post')
        @commands.cooldown(1, 15, commands.BucketType.user)
        #@commands.has_permissions(administrator=True)
        async def post(ctx, arg):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            user = ctx.author.name
            embed3 = discord.Embed(title=f' ```{arg}``` ',
                            description='***–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Ç–∏–µ –≤ Host –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–∫—Ü–∏—é –Ω–∏–∂–µ:***',
                            colour=setx)
            embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
            embed3.set_thumbnail(url=ctx.guild.icon_url)
            embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            message = await ctx.send(embed=embed3)
            await message.add_reaction('‚úÖ')
            await message.add_reaction('‚ùå')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == '‚úÖ':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : post:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} :  post:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} :  post:‚úÖ >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == '‚ùå':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : post:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  post:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  post:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break

            
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
    # -------------------------------------------------------------------------------------------------------

        @slash.slash(description='tpsend')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def tpsend(ctx, member: discord.Member, arg):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            else:
                user = ctx.author.name
                embed3 = discord.Embed(title=f'user: {user} >>> send: { member.name } ',
                                description=f'**loading...**',
                                colour=setx)
                embed3.set_image(url="https://media2.giphy.com/media/44y8gMkXosEm4qvRtF/giphy.gif?cid=790b7611ea3803295fbcd9407d7976ff88543e414e83d7d5&rid=giphy.gif&ct=g")
                embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
                embed3.set_thumbnail(url=ctx.guild.icon_url)
                embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                send1 = await ctx.send(embed=embed3)
                embed3 = discord.Embed(title=f'user: {user} >>> send: { member.name } ',
                                description=f'{arg}',
                                colour=setx)
                embed3.set_image(url="https://media2.giphy.com/media/44y8gMkXosEm4qvRtF/giphy.gif?cid=790b7611ea3803295fbcd9407d7976ff88543e414e83d7d5&rid=giphy.gif&ct=g")
                embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
                embed3.set_thumbnail(url=ctx.guild.icon_url)
                embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                send2 = await member.send(embed=embed3)
                await asyncio.sleep(3)
                await send1.delete()
                await asyncio.sleep(1800)
                await send2.delete()
            
        @slash.slash(name='qget', description='tp-role')
        @commands.cooldown(1, 25, commands.BucketType.user)
        #@commands.has_permissions(administrator=True)
        async def qget(ctx, member: discord.Member, qid):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ``member``!** {error_emoji}')
            else:
                if qid is None:
                    await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ``qid``!** {error_emoji}')
                else:
                    role_1 = member.guild.get_role(int(qid))# –∞–¥–∏ —Ä–æ–ª–∏ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —é–∑–µ—Ä
                    await member.add_roles(role_1)
                    channel_id = 1038582736266461194
                    channel = client.get_channel(channel_id)
                    inf = discord.Embed(
                        color = setx,
                        title=f"{member} >>> get : {role_1}",
                        description= role_1,
                    )
                    await ctx.send(embed=inf)
                    await channel.send(embed=inf)
            
        @slash.slash(description='tp-role')
        @commands.cooldown(1, 25, commands.BucketType.user)
        #@commands.has_permissions(administrator=True)        
        async def get(ctx, role: discord.Role, member: discord.Member):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ``member``!** {error_emoji}')
            else:
                if role is None:
                    await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ``role``!** {error_emoji}')
                else:
                    await member.add_roles(role)
                    channel_id = 1038582736266461194
                    channel = client.get_channel(channel_id)
                    inf = discord.Embed(
                        color = setx,
                        title=f"{member} >>> get : {role}",
                        description= role,
                    )
                    await ctx.send(embed=inf)


        @slash.slash(description='ban')
        @commands.has_permissions(ban_members=True)
        @commands.has_permissions(administrator=True) 
        async def ban(ctx, member: discord.Member, days=None, arg=None):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            else:
                try:
                    await ctx.guild.ban(member, delete_message_days=0)
                    await ctx.send('User banned for **' + str(days) + ' day(s)**')
                    channel_id = 1038582736266461194
                    channel = client.get_channel(channel_id)
                    embed3 = discord.Embed(
                        color = setx,
                        title=f"banned >>> {member}",
                        description=f"{member} : {arg} : {days}"
                    )
                    embed3.set_image(url="https://i.imgur.com/O3DHIA5.gif")
                    embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
                    embed3.set_thumbnail(url=ctx.guild.icon_url)
                    embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                    embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                    await channel.send(embed=embed3)
                    ban_list.append(member)
                    day_list.append(days * 24 * 60 * 60)
                    server_list.append(ctx.message.server)
                    
                except:
                    await ctx.send('error! user not active')
                await client.kick_chat_member(member.from_user.id)
                await member.send(f"user: {member} >>> {arg} ")
                await message.reply_to_message.reply("users –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

        @slash.slash(name='report')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def report(ctx, member: discord.Member, arg=None):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            else:
                i = 0
                await ctx.send(f'report: >>> {member} >>> {arg}.')
                embed3 = discord.Embed(
                    color = setx,
                    title=f"report:‚ùì >>> {member}",
                    description=f' ```{arg}``` '
                )
                embed3.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
                embed3.set_thumbnail(url=ctx.guild.icon_url)
                embed3.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                message = await ctx.send(embed=embed3)
                await message.add_reaction('üìà')
                await message.add_reaction('üìâ')

                def check(reaction, user):
                    return user == ctx.author

                reaction = None

                while True:
                    if str(reaction) == 'üìà':
                        i = i + 1
                        send2 = await ctx.send(f"user: {user} : report:üìà >>> {member} >> {i} üìà")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} :  report:üìà  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} :  report:üìà  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            await ctx.channel.create_thread()
                    elif str(reaction) == 'üìâ':
                        i = i - 1
                        send1 = await ctx.send(f"user: {user} : report:üìâ >>> {member} >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : report:üìâ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : report:üìâ  >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            await ctx.channel.create_thread()
                    try:
                        reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                        await message.remove_reaction(reaction, user)
                    except:
                        break

                await asyncio.sleep(300)
                await send2.delete()
                await send1.delete()
                await message.delete()
                if i > 3:
                    overwrite = discord.PermissionOverwrite()
                    overwrite.send_messages = False
                    overwrite.read_messages = False
                    overwrite.connect = False
                    await ctx.set_permissions(message.author, overwrite=overwrite)
                    embed3 = discord.Embed(title=f'HOST: {ctx.channel.name}',
                                    description= f'**Channel Locked.**\n USER: {member} : {user} \n ``send_messages = False`` \n ``read_messages = False`` \n ``connect = False`` \n cod: ``{overwrite}`` \n**Reason:** Guild Save Used\n`Please Wait For An Admin/Moderator To Unlock This Channel`',
                                    colour=setx)
                    await ctx.send(embed=embed3)
                    await member.send(f"user: {user} : report:üìâ >>> have been banned >> {member} >> {i} üìâ")
                else:
                    await ctx.channel.purge()
                    await user.send(f"user: {user} : report:üìâ >>> cancellation >> {member} >> {i} üìâ")
        @client.event
        async def on_ready():
            now_time = nd.strftime(">> %H:%M:%S >>") #–ò–º–ø–æ—Ä—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å —á–∞—Å–∞–º–∏, –º–∏–Ω—É—Ç–∞–º–∏, —Å–µ–∫—É–Ω–¥–∞–º–∏.
            date_dm = nd.strftime(" - %d.%m.%y %b -") #–î–∞—Ç–∞ —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
            print("\033[1;32m >> Channel >>" + " SYSTEM:‚úü‚ÑÇ‚ÑÇùïãùïç‚úû " + (now_time))
            print("\033[1;32m Bot has successfully logged in as: {}".format(client.user))
            print("\033[1;32m Bot ID: {}\n".format(client.user.id))
            winsound.Beep(frequency2, duration2)
            print("[+] the system is restarted...") 
            printer.start()
            
        @slash.slash(description="avatar")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def user(ctx, member: discord.Member):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member == None:#–µ—Å–ª–∏ –Ω–µ —É–ø–æ–º–∏–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Ç–æ–≥–¥–∞ –≤—ã–≤–æ–¥–∏—Ç –∞–≤–∞—Ç–∞—Ä –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                member = ctx.author
            embed = discord.Embed(color = setx, title = f"–ê–≤–∞—Ç–∞—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞ - {member.name}", description = f"[Download]({member.avatar_url})")
            embed.set_image(url = member.avatar_url)
            embed.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
            embed.set_thumbnail(url=ctx.guild.icon_url)
            embed.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
            embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed = embed)

        @client.event
        async def on_guild_join(guild):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            print("==============================================")
            print("[GUILD]   –ë–æ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É!          ")
            print("[GUILD]   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ                  ")
            print("==============================================")
            print(f'[GUILD]  –°–µ—Ä–≤–µ—Ä           - {guild.name}       ')
            print(f'[GUILD]  –í–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ - {guild.owner}      ')
            print(f'[GUILD]  ID –±–æ—Ç–∞          - {guild.id}         ')
            print(f'[GUILD]  –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä - {guild.region}  ')
            print("==============================================")
            print(" ")
            overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False,read_message_history=False,connect = False),
            guild.me: discord.PermissionOverwrite(read_messages=True,read_message_history=True,connect = True,send_messages =True)
            }
            try:
                channel2 = discord.utils.get(guild.channel, name = "‚úü‚ÑÇ‚ÑÇùïãùïç‚úû")
            except:
                channel2 = await guild.create_text_channel(f"‚úü‚ÑÇ‚ÑÇùïãùïç‚úû", lveres=overwrites, position = 1)
            perms = discord.Permissions(connect=False,read_messages=False,read_message_history=False,send_messages=False)
            try:
                rolep = discord.utils.get(guild.roles, name = "pocket")#—á–µ—Ä–µ–∑ –∞–π–¥–∏ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –∏—Å–∫–∞—Ç—å
                try:
                    rolep_id = rolep.id
                except:
                    rolep_id = None
            except:
                rolep = await guild.create_role(name= "pocket", permissions=perms, color = setx)
                await rolep.edit(reason = "cancel all settings (0).",permissions = perms)
                try:
                    rolep_id = rolep.id
                except:
                    rolep_id = None
            try:
                perms = discord.Permissions(send_messages=False,read_message_history=False,read_messages=False,administrator = False,connect = False)
                try:
                    role1 = discord.utils.get(guild.roles, name = "–ú—É—Ç")
                except:
                    role1 = await guild.create_role(name=f"–ú—É—Ç", permissions=perms, color = setx)
                role1_id = role1.id
            except:
                role1 = None
                role1_id = role1
            try:
                perms = discord.Permissions(administrator = True,send_messages= True,read_message_history=True,connect = True,read_messages=True)
                try:
                    role2 = discord.utils.get(guild.roles, name = "admin")
                except:
                    role2 = await guild.create_role(name=f"admin", permissions=perms, color = setx)
                role2_id = role2.id
            except:
                role2 = None
                role2_id = role2
            now_times = nd.strftime(" = %H : %M : %S = ") #–í—Ä–µ–º—è —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
            date_dm = nd.strftime(" - %d.%m.%y %b -") #–î–∞—Ç–∞ —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
            embed2 = discord.Embed(color = setx, title = f"‚úü‚ÑÇ‚ÑÇùïãùïç‚úû –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É {guild.name}")
            embed2.add_field(name='ADMIN: ', value=f"\nIDKey: {role2_id} \n IDBAN: {role1_id} \n ID plugin - {rolep_id} \n ID –±–æ—Ç–∞ - {guild.id} \n")
            embed2.add_field(name='INFO: ', value=f"\n–°–µ—Ä–≤–µ—Ä - {guild.name} \n ID - {guild.id} \n Owner - {guild.owner} \n Disk - {guild.region} \n")
            embed2.add_field(name='–°hannel: ', value=f"\n [overwrites] {overwrites} \n [channel] {channel2} \n [color] {setx} \n")
            embed2.add_field(name='BOT: ', value=f"\n [perms] {perms} \n [channel] {channel2} \n [color] {setx} \n")
            try:
                embed.set_thumbnail(url=guild.icon_url)
            except:
                print("err [photo]")
            await channel2.send(embed=embed2)
            try:
                channel_id = 1038582736266461194
                channel = client.get_channel(channel_id) 
                await channel.send(embed=embed2)
            except:
                print("Err404")
            embed = discord.Embed(color=setx, title=f'Commands:', description= "``/square `` - write the properties of a square -> \n –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞ \n ``/circle `` - write circle properties -> \n –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫—Ä—É–≥–∞ \n ``/cl_lvlup `` - clear the level -> \n –æ—á–∏—Å—Ç–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å \n ``/cl_bad_word2`` - clear the blacklist -> \n –æ—á–∏—Å—Ç–∏—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ \n ``/cl_history `` - clear history -> \n –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é \n ``/cl_index`` - clear the index -> \n –æ—á–∏—Å—Ç–∏—Ç—å –∏–Ω–¥–µ–∫—Å \n  ``/qrule34 `` - content for 18+ -> \n –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è 18+ \n  ``/rule34 `` - content for 18+ -> \n –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è 18+ \n ``/nsfw `` - content for 18+ -> \n –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è 18+ \n ``/webhook /webhook2  `` - webhook management -> \n —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ–±-–ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞–º–∏ \n ``/changestatus  `` - change the status of the bot -> \n –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ \n  ``/qlvlup  `` - viewing the level of posts. -> \n –ø—Ä–æ—Å–º–æ—Ç—Ä —É—Ä–æ–≤–Ω—è –ø–æ—Å—Ç–æ–≤. \n  ``/qinvite `` - a sheet for checking invites. -> \n –ª–∏—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π. \n  ``/search`` - search in history. -> \n –ø–æ–∏—Å–∫ –≤ –∏—Å—Ç–æ—Ä–∏–∏ \n ``/avatar`` - Shows you a users profile picture. -> \n –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n ``/qhelp`` - Shows you a help embed. -> \n –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–ø—Ä–∞–≤–∫—É \n``/post`` - publish a post -> \n –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç \n``üìù /info`` - Shows useful server information.  -> \n –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ. \n``/invite`` - Shows you a list of server invitations  -> \n –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä \n``/qinfo`` - Shows you useful information about a user  -> \n –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. \n``/write_prefix`` - new prefix for staff command.  -> \n –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —à—Ç–∞–±–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã. \n``/dm /tpsend`` - for a personal chat.  -> \n–¥–ª—è –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞. \n``/qnick`` - quickly change the nickname on the server.  -> \n –±—ã—Å—Ç—Ä–æ —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. \n``/report`` - Shows you useful information about a user.  -> \n –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. \n``/clear`` - clear the entire chat in 5-10 seconds.  -> \n —Å—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —á–∞—Ç –∑–∞ 5-10 —Å–µ–∫—É–Ω–¥. \n``/qchannel`` - create a new chat.  -> \n —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç. \n``/ban`` - Bans a member.  -> \n —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç. \n``/clears`` - Clears the community from the user.  -> \n —Å—á–∏—â–∞–µ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. \n``/lockdown`` - Kicks a member.  -> \n –∑–∞–∫—Ä—ã—Ç—å —á–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n``/unlock`` - Unbans a member.  -> \n –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n``/qchdel`` - isolation channel. -> \n —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª. \n ``/remove`` - remove a role from a user. ->\n —É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. \n ``/browser`` - search for information on a subject.  -> \n –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ. \n")
            embed.add_field(name='Add to your server -> \n –î–æ–±–∞–≤–∏—Ç—å –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä', value='[‚å®](https://discord.com/api/oauth2/authorize?client_id=1020080505384873984&permissions=8&scope=bot%20applications.commands)', inline=False)
            embed.add_field(name='Official bot server -> \n –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç-—Å–µ—Ä–≤–µ—Ä:', value='[üéõ](https://discord.gg/5zRq8kux96)', inline=False)
            embed.add_field(name=' Developer Terms of Service -> \n –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:', value='[üîç](https://discord.com/developers/docs/policies-and-agreements/developer-terms-of-service)', inline=False)
            embed.add_field(name=' Discord Developer Policy -> \n –ü–æ–ª–∏—Ç–∏–∫–∞ Discord –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:', value='[üìã](https://discord.com/developers/docs/policies-and-agreements/developer-policy)', inline=False)
            embed.add_field(name=' Learn more about bot users -> \n –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö-–±–æ—Ç–∞—Ö:', value='[üì¶](https://discord.com/developers/docs/topics/oauth2#bots)', inline=False)
            embed.add_field(name='  ùô¢ùôÆ ùôòùôßùôöùôñùô©ùô§ùôß ', value='[üíé](https://discord-tracker.ru/tracker/user/931586817713668177/)', inline=False)
            ping_ = client.latency
            ping = round(ping_ * 1000)
            
            i = 0
            n = 0
                
            embed.add_field(name=f"my ping - –º–æ–π –ø–∏–Ω–≥:", value=f'[{ping}ms üïê](https://yandex.ru/time?ysclid=l9rqar6ovg84234744)', inline=False)
                    
            try:
                embed.set_thumbnail(url=guild.icon_url)
            except:
                print("err [photo]")
            await channel2.send(embed=embed)
            
            embed2 = discord.Embed(color=setx, title=f'**did you have a problem? -> \n —É –≤–∞—Å –±—ã–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞? : prefix = $.**', description= "You can turn on the desired settings, write : ``/settings`` \n –í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –Ω—É–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –Ω–∞–ø–∏—à–∏—Ç–µ : ``/settings``. \n ")
            await channel2.send(embed=embed2)
            
        @tasks.loop(seconds=12.0) #–°–æ–∑–¥–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é —Ç–∏–ø–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —É–∫–∞–∑—ã–≤–∞–µ–º seconds=12.0 –ª–∏–±–æ –º–æ–∂–Ω–æ minutes=12 –Ω—É –∫–∞–∫ —Ç–æ —Ç–∞–∫
        async def printer():
                nds = datetime.datetime.now()
                now_time = nds.strftime(" = %H:%M:%S =")
                await client.change_presence(activity = discord.Activity( type=discord.ActivityType.watching, name = f"Update: {now_time}" ))
                await asyncio.sleep(120)
                await client.change_presence(status = discord.Status.idle,activity = discord.Game (type=discord.ActivityType.watching, name=f"{len(client.guilds)} servers!"))
                await asyncio.sleep(120)
        class MyBot(Bot):

            async def connect(self, *, reconnect: bool = True) -> None:
                print("  [-] plug-ins are enabled (2)")  
                """|coro|

                Creates a websocket connection and lets the websocket listen
                to messages from Discord. This is a loop that runs the entire
                event system and miscellaneous aspects of the library. Control
                is not resumed until the WebSocket connection is terminated.

                Parameters
                -----------
                reconnect: :class:`bool`
                    If we should attempt reconnecting, either due to internet
                    failure or a specific failure on Discord's part. Certain
                    disconnects that lead to bad state will not be handled (such as
                    invalid sharding payloads or bad tokens).

                Raises
                -------
                :exc:`.GatewayNotFound`
                    If the gateway to connect to Discord is not found. Usually if this
                    is thrown then there is a Discord API outage.
                :exc:`.ConnectionClosed`
                    The websocket connection has been terminated.
                """

                backoff = discord.client.ExponentialBackoff()
                ws_params = {
                    'initial': True,
                    'shard_id': self.shard_id,
                }
                while not self.is_closed():
                    try:
                        coro = MyGateway.from_client(self, **ws_params)
                        self.ws = await asyncio.wait_for(coro, timeout=60.0)
                        ws_params['initial'] = False
                        while True:
                            await self.ws.poll_event()
                    except discord.client.ReconnectWebSocket as e:
                        _log.info('Got a request to %s the websocket.', e.op)
                        self.dispatch('disconnect')
                        ws_params.update(sequence=self.ws.sequence, resume=e.resume, session=self.ws.session_id)
                        continue
                    except (OSError,
                            discord.HTTPException,
                            discord.GatewayNotFound,
                            discord.ConnectionClosed,
                            aiohttp.ClientError,
                            asyncio.TimeoutError) as exc:

                        self.dispatch('disconnect')
                        if not reconnect:
                            await self.close()
                            if isinstance(exc, discord.ConnectionClosed) and exc.code == 1000:
                                # clean close, don't re-raise this
                                return
                            raise

                        if self.is_closed():
                            return

                        # If we get connection reset by peer then try to RESUME
                        if isinstance(exc, OSError) and exc.errno in (54, 10054):
                            ws_params.update(sequence=self.ws.sequence, initial=False, resume=True, session=self.ws.session_id)
                            continue

                        # We should only get this when an unhandled close code happens,
                        # such as a clean disconnect (1000) or a bad state (bad token, no sharding, etc)
                        # sometimes, discord sends us 1000 for unknown reasons so we should reconnect
                        # regardless and rely on is_closed instead
                        if isinstance(exc, discord.ConnectionClosed):
                            if exc.code == 4014:
                                raise discord.PrivilegedIntentsRequired(exc.shard_id) from None
                            if exc.code != 1000:
                                await self.close()
                                raise

                        retry = backoff.delay()
                        _log.exception("Attempting a reconnect in %.2fs", retry)
                        await asyncio.sleep(retry)
                        # Always try to RESUME the connection
                        # If the connection is not RESUME-able then the gateway will invalidate the session.
                        # This is apparently what the official Discord client does.
                        ws_params.update(sequence=self.ws.sequence, resume=True, session=self.ws.session_id)

        @client.event
        async def on_command_error(ctx, err):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            embed3 = discord.Embed(title = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ``{err}``", colour=setx)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)

            err = await ctx.send(embed = embed3)
            await asyncio.sleep(8)
            await err.delete()

        @client.event
        async def command_name_error(ctx, error):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            embed3 = discord.Embed(title = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ``{err}``", colour=setx)
            embed3.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)

            err = await ctx.send(embed = embed3)
            await asyncio.sleep(8)
            await err.delete()
            
        @slash.slash(description="add channel +v +t")
        @commands.cooldown(1, 900, commands.BucketType.user)
        async def qchannel(ctx, member: discord.Member,statustype:str,lim= None):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            if statustype is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ statustype!** {error_emoji}')
            else:
                guild = member.guild
                try:
                    perms = discord.Permissions(read_messages = False,connect = False,read_message_history= False,send_messages = False)
                    print("Ok.. ")
                except:
                    print("error (0) [Permissions]")
                try:
                    overwrite = discord.PermissionOverwrite()
                    overwrites = {
                    guild.default_role: discord.PermissionOverwrite(read_messages= False,read_message_history= False,send_messages = False),
                    guild.me: discord.PermissionOverwrite(read_messages=False,read_message_history=False,send_messages = False)
                    }
                    print("Ok.. ")
                except:
                    print("error (1) [Overwrite]")
                try:
                    overwrite.read_messages = False
                    overwrite.connect = False
                    overwrite.read_message_history= False
                    overwrite.send_messages = False
                    print("Ok.. ")
                except:
                    print("error (2) [overwrite]")
                try:
                    await message.channel.set_permissions(message.author, overwrite=overwrite)
                    print("Ok.. ")
                except:
                    print("error (3) [set_permissions]")
                try:
                    role = discord.utils.get(message.guild.roles, name = "@everyone")
                    await role.edit(permissions = perms)
                    print("Ok.. ")
                except:
                    print("error (4) [utils.get]")
                    
                try:
                    role = discord.utils.get(message.guild.roles, name = "@here")
                    await role.edit(permissions = perms)
                    print("Ok.. ")
                except:
                    print("error (5) [utils.get]")
                
                overwrites = {
                    guild.default_role: discord.PermissionOverwrite(send_messages = False),
                    guild.default_role: discord.PermissionOverwrite(read_messages=False),
                    guild.default_role: discord.PermissionOverwrite(connect = False),
                    guild.me: discord.PermissionOverwrite(read_messages=True),
                    guild.me: discord.PermissionOverwrite(send_messages=True),
                    guild.me: discord.PermissionOverwrite(connect = True),
                }

                if statustype is "T":
                    channel2 = await guild.create_text_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                if statustype is "V":
                    channel2 = await guild.create_voice_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                if statustype is "+T":
                    channel2 = await guild.create_text_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                if statustype is "+V":
                    channel2 = await guild.create_voice_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)

                if statustype is "t":
                    channel2 = await guild.create_text_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                if statustype is "v":
                    channel2 = await guild.create_voice_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                if statustype is "+t":
                    channel2 = await guild.create_text_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                if statustype is "+v":
                    channel2 = await guild.create_voice_channel(f"ùêÇùêáùêÄùêì: {member}", ves=overwrites, category=perms, overwrites=overwrites, position = 1, limit = lim)
                channel_id = 1038582736266461194
                channel = client.get_channel(channel_id)
                inf = discord.Embed(
                    color = setx,
                    title=f"‚úü‚ÑÇ‚ÑÇùïãùïç‚úû>> ùêÇùêáùêÄùêì",
                    description=f"user: {user} >> ùêÇùêáùêÄùêì: {member}"
                )
                await channel.send(embed=inf)
                await channel2.send(embed=inf)
                embed2 = discord.Embed(color = setx, title = f"‚úü‚ÑÇ‚ÑÇùïãùïç‚úû –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫  ùêÇùêáùêÄùêì: {member} ")
                embed2.add_field(name='ADMIN -> \n –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†: ', value=f"\nIDKey: {member} \n IDKey: {user} \n")
                embed2.add_field(name='INFO -> \n –ò–ù–§–û–†–ú–ê–¶–ò–Ø: ', value=f"\n–°–µ—Ä–≤–µ—Ä - {guild.name} \n ID - {guild.id} \n Owner - {guild.owner} \n Disk - {guild.region} \n")
                embed2.add_field(name='–°hannel -> \n –ö–∞–Ω–∞–ª: ', value=f"\n [overwrites] {overwrites} \n [channel] {channel2} \n [color] {setx} \n [Time] 900 seconds \n [limit] {lim} \n")
                embed2.add_field(name='BOT -> \n –ë–û–¢: ', value=f"\n [perms] {overwrites} \n [channel] {channel2} \n [color] {setx} \n")
                try:
                    embed.set_thumbnail(url=guild.icon_url)
                except:
                    print("err [photo]")
                await channel2.send(embed=embed2)
                await asyncio.sleep(900) # –û–∂–∏–¥–∞–Ω–∏–µ 4 —Å–µ–∫—É–Ω–¥—É
                await channel2.delete() #–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–æ–π Mas —Ç–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.           

        @client.event
        async def on_member_join(member):
            await member.create_dm()
            await member.dm_channel.send(
                f'Hello, {member.name}!! Welcome to Our Discord Server! -> \n –ü—Ä–∏–≤–µ—Ç, {member.name}!! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä!'
            )
                

        @slash.slash(description="cleartp")
        @commands.cooldown(1, 30, commands.BucketType.user)
        async def clears(ctx, user: discord.Member):
            await ctx.channel.purge(limit=None, check=lambda m: m.author==user)
            Mas = await ctx.send(f"clear >>") # –ü–µ—Ä–µ–º–µ–Ω–∞—è –≥–¥–µ –≤—ã–≤–æ–¥–∏—Ç –≤ —á–∞—Ç —Ç–æ —á—Ç–æ —á–∞—Ç –æ—á–∏—â–µ–Ω –≤ –º–µ—Å—Ç–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∫–∞–∑–∞–Ω–æ–≥–æ –≤–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è 
            await asyncio.sleep(3) # –û–∂–∏–¥–∞–Ω–∏–µ 4 —Å–µ–∫—É–Ω–¥—É
            await Mas.delete() #–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–æ–π Mas —Ç–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
        #–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
        @slash.slash(description='clear')
        #@commands.has_permissions(administrator=True)
        @commands.cooldown(1, 30, commands.BucketType.user)
        async def clear(ctx):
                h = 0
                i = 0
                os.system("cls")
                await asyncio.sleep(1)# amount = 32 - —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–∞—è –≤ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–¥–∞–Ω–æ —É–∂–µ 32
                await ctx.channel.purge() # –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –≥–¥–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞. limit = amount –∫–æ–ª-–≤–æ —É–¥–∞–ª—è–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ç—É—Ç —É–∫–∞–∑—ã–≤–∞–µ—Ç—å—Å—è amount –ø–µ—Ä–º–µ–Ω–∞—è —Ç–∞–∫ —á—Ç–æ —Å–∫–æ–ª—å –≤—ã –≤—ã –≤–µ–ª–∏ —Å—Ç–æ–ª—å–∫–æ –∏ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π. 
                Mas = await ctx.send(f"clear >>") # –ü–µ—Ä–µ–º–µ–Ω–∞—è –≥–¥–µ –≤—ã–≤–æ–¥–∏—Ç –≤ —á–∞—Ç —Ç–æ —á—Ç–æ —á–∞—Ç –æ—á–∏—â–µ–Ω –≤ –º–µ—Å—Ç–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∫–∞–∑–∞–Ω–æ–≥–æ –≤–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è 
                await asyncio.sleep(3) # –û–∂–∏–¥–∞–Ω–∏–µ 4 —Å–µ–∫—É–Ω–¥—É
                await Mas.delete() #–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–æ–π Mas —Ç–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
        #–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
        @slash.slash(description='qclear')
        #@commands.has_permissions(administrator=True)
        @commands.cooldown(1, 30, commands.BucketType.user)
        async def qclear(ctx,number:int):
            h = 0
            i = 0
            os.system("cls")
            await ctx.channel.purge(limit=number)
            Mas = await ctx.send(f"clear -> \n –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π >> {number}")
            await asyncio.sleep(3) # –û–∂–∏–¥–∞–Ω–∏–µ 4 —Å–µ–∫—É–Ω–¥—É
            await Mas.delete() #–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–æ–π Mas —Ç–æ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
            
        @slash.slash(description='-cl index')
        @commands.cooldown(1, 15, commands.BucketType.user)
        async def cl_index(ctx):
            Mas = await ctx.send(f"cl_index -> \n –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö >>")
            await asyncio.sleep(1)
            os.remove("Invite.txt")
            await Mas.delete()
            
        @slash.slash(description='-cl history')
        @commands.cooldown(1, 15, commands.BucketType.user)
        async def cl_history(ctx):
            Mas = await ctx.send(f"cl_history -> \n –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π >>")
            await asyncio.sleep(1)
            os.remove("Massage.txt")
            await Mas.delete()
            
        @slash.slash(description='-cl lvlup')
        @commands.cooldown(1, 15, commands.BucketType.user)
        async def cl_lvlup(ctx):
            Mas = await ctx.send(f"dlvlup -> \n –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ–ª–æ—Å–æ–≤ >>")
            await asyncio.sleep(1)
            os.remove('Up_lvl.txt')
            await Mas.delete()
            
        @slash.slash(description='-cl bad_word2')
        @commands.cooldown(1, 15, commands.BucketType.user)
        async def cl_bad_word2(ctx):
            Mas = await ctx.send(f"qdel -> \n –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π >>")
            await asyncio.sleep(1)
            os.remove("Bad word2.txt")
            await Mas.delete()
            

        @slash.slash(description="list+")
        @commands.cooldown(1, 15, commands.BucketType.user)
        async def qlist(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            guild = ctx.guild
            servers = []
            for guild in client.guilds:
                try:
                    invite = await guild.text_channels[0].create_invite(max_age=3600)
                    servers.append(f"\n ** {guild.name} ** - \n [0] {invite.url} \n")
                except:
                    continue
                    
        @slash.slash(description="+")
        @commands.cooldown(1, 10, commands.BucketType.user)
        #@commands.has_permissions(administrator=True) 
        async def invite(ctx, member: discord.Member):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            if member is None:
                await ctx.send(f'{error_emoji} **–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!** {error_emoji}')
            else:
                guild = member.guild
                i = 0 
                async for entry in guild.audit_logs(limit = 10):
                    if entry.action == discord.AuditLogAction.invite_create:
                        print(f'{entry.user} —Å–æ–∑–¥–∞–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {entry.target}')
                        invites = await guild.invites()
                        for invite in invites:
                            i = i + 1
                            print(f'–°—Å—ã–ª–∫–∞: {invite.url} \n–°–æ–∑–¥–∞—Ç–µ–ª—å: {invite.inviter} \n –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {invite.uses} \n')
                            with open("Invite.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8
                                logmsg.write(f"{entry.user} —Å–æ–∑–¥–∞–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {entry.target} \n")
                                logmsg.write(f"–°—Å—ã–ª–∫–∞: {invite.url} \n–°–æ–∑–¥–∞—Ç–µ–ª—å: {invite.inviter} \n –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {invite.uses} \n")
                inf = discord.Embed(
                    color = setx,
                    title=f"‚úü‚ÑÇ‚ÑÇùïãùïç‚úû search: {guild.name}",
                    description= f'work completed, results {i} / 10 found.'
                )
                inf.add_field(name='link:', value='[üíå](https://discord.gg/KamKsdJ9Bz)', inline=False)
                inf.add_field(name='Rolse:', value='[‚Ñ¢](https://discord.gg/WKNR4PxTfy)', inline=False)
                inf.set_image(url="https://media4.giphy.com/media/4edx0TGrxhhnnCTgO4/giphy.gif?cid=ecf05e47yfdn8muafkq1q6hqlg578f4a3i22bvw162lgd5kz&rid=giphy.gif&ct=g")
                inf.set_thumbnail(url=ctx.guild.icon_url)
                inf.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
                inf.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
                channel_id = 1038582736266461194
                channel = client.get_channel(channel_id)
                Mas = await ctx.send(embed = inf)
                Mas1 = await channel.send(file=discord.File('Invite.txt'))
                await asyncio.sleep(30)
                await Mas.delete()
                await Mas1.delete()

        @slash.slash(description="-server")
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def info(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            guild = ctx.author.guild
            user = ctx.author
            
            role_count = len(ctx.guild.roles)
            staff_roles = ["Owner", "Head Dev", "Dev", "Head Admin", "Admins", "Moderators", "Community Helpers", "Members"]
                
            embed2 = discord.Embed(color = setx, title = "INFO -> \n –ò–ù–§–û–†–ú–ê–¶–ò–Ø :")
            embed2.add_field(name='Domain -> \n –î–æ–º–µ–Ω : ', value=f"{ctx.guild.name}", inline=False)
            embed2.add_field(name='Owner -> \n –í–ª–∞–¥–µ–ª–µ—Ü : ', value=f"{guild.owner}", inline=False)
            embed2.add_field(name='Verification Level -> \n –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏ : ', value=str(ctx.guild.verification_level), inline=False)
            embed2.add_field(name='Highest role -> \n –í—ã—Å—à–∞—è —Ä–æ–ª—å : ', value=ctx.guild.roles[-2], inline=False)
            embed2.add_field(name='Region -> \n –û–±–ª–∞—Å—Ç—å :', value=f"{guild.region}")  

            for r in staff_roles:
                role = discord.utils.get(ctx.guild.roles, name=r)
                if role:
                    members = '\n'.join([member.name for member in role.members]) or "None"
                    embed2.add_field(name=role.name, value=members)

            embed2.add_field(name='Number of roles -> \n –ö–æ–ª-–≤–æ —Ä–æ–ª–µ–π : ', value=str(role_count), inline=False)
            embed2.add_field(name='Number Of Members -> \n –ö–æ–ª-–≤–æ —á–ª–µ–Ω–æ–≤ : ', value=ctx.guild.member_count, inline=False)
            embed2.add_field(name='Created At: ', value=ctx.guild.created_at.__format__('%A, %d. %B %Y @ %H:%M:%S'), inline=False)
            embed2.set_thumbnail(url=ctx.guild.icon_url)
            embed2.set_footer(text=client.user.name, icon_url=client.user.avatar_url)

            await ctx.send(embed=embed2)
                
            
    # -------------------------------------------------------------------------------------------------------        
        @client.command()
        @commands.cooldown(1, 10, commands.BucketType.user)
        async def server(ctx):
            colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
            setx = random.choice(colset)
            i = 0
            activeservers = client.guilds
            await ctx.message.delete()
            embed2 = discord.Embed(
                color = setx,
                description= activeservers
            )
            embed2.set_thumbnail(url=ctx.guild.icon_url)
            embed2.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            embed2.set_footer(text=client.user.name, icon_url=client.user.avatar_url)
            message = await ctx.send(embed=embed2)
            await message.add_reaction('üí≤')
            await message.add_reaction('üö∑')
            def check(reaction, user):
                return user == ctx.author


            reaction = None

            while True:
                if str(reaction) == 'üí≤':
                    i = i + 1
                    send2 = await user.send(f"user: {user} : server:‚úÖ >> {i} üìà")
                    with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                        logmsg.write(f"user: {user} : server:‚úÖ >> {i} üìà")# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                        print(f"user: {user} : server:‚úÖ >> {i} üìà")# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                elif str(reaction) == 'üö∑':
                    if i > 0:
                        i = i - 1
                        send1 = await user.send(f"user: {user} : server:‚ùå >> {i} üìâ")
                        with open("Up_lvl.txt", "a", encoding = "utf-8") as logmsg: # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª Massage.txt –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8 
                            logmsg.write(f"user: {user} : server:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt
                            print(f"user: {user} : server:‚ùå >> {i} üìâ") # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ –≤ Bad.txt

                
                try:
                    reaction, user = await client.wait_for('reaction_add', timeout = 300.0, check = check)
                    await message.remove_reaction(reaction, user)
                except:
                    break
                
            await asyncio.sleep(1800)
            await send2.delete()
            await send1.delete()
            await message.delete()
    # -------------------------------------------------------------------------------------------------------
        @slash.slash(description='change: +g +r +w')
        @commands.cooldown(1, 10, commands.BucketType.user) #–ó–∞–¥–µ—Ä–∂–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è 8 —Å–µ–∫—É–Ω–¥—ã
        async def changestatus( ctx, statustype:str = None, *, arg:str = None): #–ò—Å–ø—Ä—Ç–∏—Ä—É–µ–º ctx, –∑–∞—Ç–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω—ã–µ —Ç–∏–ø —Å—Ç–∞—Ç—É—Å–∞ / –∞—Ä–≥—É–º–µ–Ω—Ç
            if statustype is None:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–∫–∞–∑–∞–ª–∏ –ª–∏ —Ç–∏–ø —Å—Ç–∞—Ç—É—Å–∞
                await ctx.send( '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–∏–ø –°—Ç–∞—Ç—É—Å–∞' )
            elif arg is None: # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–∫–∞–∑–∞–ª–∏ –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç
                await ctx.send( '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω—É–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç' )
            else: #–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ 
                if statustype.lower() == 'g': # –ò–≥—Ä–∞–µ—Ç –≤
                    await client.change_presence ( status = discord.Status.idle, activity=discord.Game( name = arg) )
                elif statustype.lower() == 'r': # –õ–∏—Å—Ç–∞–µ—Ç
                    await client.change_presence( status = discord.Status.idle, activity=discord.Activity( type=discord.ActivityType.listening, name = arg) )
                elif statustype.lower() == 'w': # –°–º–æ—Ç—Ä–∏—Ç
                    await client.change_presence( status = discord.Status.idle, activity=discord.Activity( type=discord.ActivityType.watching, name = arg) )
        @slash.slash(description='prefix')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def write_prefix(ctx, *, prefixsetup = None):
                if prefixsetup == None:
                        massnoprefix = await ctx.send(f"–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å <prefix>")
                        await asyncio.sleep(8)
                        await massnoprefix.delete()
                else:
                        openPrefixFile = open("prefix.txt", "w") # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª prefix.txt –º–µ—Ç–∞–¥–æ–º write –¢–æ–µ—Å—Ç—å –∑–∞–ø–∏—Å–∏.
                        writingprefix = openPrefixFile.write(prefixsetup) #–ù—É –∞ —Ç—É—Ç –º—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π —Ñ–∞–π–ª prefix.txt –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—Ä–µ–º–µ–Ω—É—é prefixsetup –≥–¥–µ –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.
                        await ctx.send(f"–ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ > {prefixsetup} < –ß—Ç–æ –±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤–∏–¥–∏—Ç–µ {prefixintial} reload")
                        await client.change_presence(status = discord.Status.idle, activity = discord.Activity( type =discord.ActivityType.watching, name = f"{prefix}reload"))
        @client.command(description='shutdown')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def shutdown(ctx):
                colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
                setx = random.choice(colset)
                inf = discord.Embed(
                    color = setx,
                    title="‚úü‚ÑÇ‚ÑÇùïãùïç‚úû > ‚ùå",
                    description="-–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ -Return 25sec.")
                now_times = nd.strftime(" = %H : %M : %S = ") #–í—Ä–µ–º—è —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
                date_dm = nd.strftime(" - %d.%m.%y %b -") #–î–∞—Ç–∞ —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
                embedmas = await ctx.send(embed=inf)
                await asyncio.sleep(25)
                await embedmas.delete()
                await os.execv(sys.executable, ["python"] + sys.argv) #–ù–æ —Ç—É—Ç –º—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à —Ñ–∞–π–ª —Ç–æ –µ—Å—Ç—å –±–æ—Ç–∞

        @slash.slash(description='shutdown')
        @commands.cooldown(1, 25, commands.BucketType.user)
        async def shutdown(ctx):
                colset = [0x8A2BE2,0x9b59b6,0x71368a,0x1abc9c,0x2ecc71,0x11806a,0xff0000,0x607d8b,0x1f8b4c,0x48D1CC,0x00FF00,0x3498db]
                setx = random.choice(colset)
                inf = discord.Embed(
                    color = setx,
                    title="‚úü‚ÑÇ‚ÑÇùïãùïç‚úû > ‚ùå",
                    description="-–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ -Return 25sec.")
                now_times = nd.strftime(" = %H : %M : %S = ") #–í—Ä–µ–º—è —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
                date_dm = nd.strftime(" - %d.%m.%y %b -") #–î–∞—Ç–∞ —Å –∏–∑–º–µ–Ω—ë–Ω—ã–º —Å—Ç–∏–ª–µ–º
                embedmas = await ctx.send(embed=inf)
                await asyncio.sleep(25)
                await embedmas.delete()
                await os.execv(sys.executable, ["python"] + sys.argv) #–ù–æ —Ç—É—Ç –º—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à —Ñ–∞–π–ª —Ç–æ –µ—Å—Ç—å –±–æ—Ç–∞


    except:
        print("[****] > operator problems, system restart!")
    #------------
    #–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        print("[+] restarting the client")
        client.run(str(token))
        #–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (TokenBot) - –≠—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–∞—è –≤ –∫–æ—Ç–æ—Ä–æ–π —É–∫–∞–∑—ã–≤–∞–µ—Ç—å—Å—è —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞.
        subprocess.Popen(['python', os.path.realpath(__file__), '0'], close_fds=True)
        print ('main end')
        print ('[-] remote to startup')
    except:
        print("[**] > Error in the client, please. restart the system !")            
